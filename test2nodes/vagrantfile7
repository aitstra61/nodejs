# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # General Vagrant VM configuration.
  config.vm.box = "centos/7"
  config.ssh.insert_key = false
  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.provider :virtualbox do |v|
    v.memory = 1024
    v.linked_clone = true
  end

  # Pet server 1.
  config.vm.define "pet1" do |app|
    app.vm.hostname = "awx1.dev"
    app.vm.network :private_network, ip: "192.168.60.20"
  config.ssh.private_key_path = ["~/.ssh/id_rsa", "/Users/rstrait/.vagrant.d/insecure_private_key"]
  config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/id_rsa"
  config.vm.provision "shell", inline: <<-EOC
    sudo sed -i -e "\\#PasswordAuthentication yes# s#PasswordAuthentication yes#PasswordAuthentication no#g" /etc/ssh/sshd_config
   #sudo service ssh restart
  EOC
  end

  # Pet server 2.
  config.vm.define "pet2" do |app|
    app.vm.hostname = "jen1.dev"
    app.vm.network :private_network, ip: "192.168.60.30"
    config.ssh.private_key_path = ["~/.ssh/id_rsa", "/Users/rstrait/.vagrant.d/insecure_private_key"]
  config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/id_rsa"
  config.vm.provision "shell", inline: <<-EOC
    sudo sed -i -e "\\#PasswordAuthentication yes# s#PasswordAuthentication yes#PasswordAuthentication no#g" /etc/ssh/sshd_config
   #sudo service ssh restart
  EOC
  end

  # Pet server 3.
  config.vm.define "pet3" do |app|
    app.vm.hostname = "octo1.dev"
    app.vm.network :private_network, ip: "192.168.60.40"
  config.ssh.private_key_path = ["~/.ssh/id_rsa", "/Users/rstrait/.vagrant.d/insecure_private_key"]
  config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/id_rsa"
  config.vm.provision "shell", inline: <<-EOC
    sudo sed -i -e "\\#PasswordAuthentication yes# s#PasswordAuthentication yes#PasswordAuthentication no#g" /etc/ssh/sshd_config
   #sudo service ssh restart
  EOC
  end

  # Cattle server 1.
  config.vm.define "cattle1" do |app|
    app.vm.hostname = "nginx1.test"
    app.vm.network :private_network, ip: "192.168.50.20"
  config.ssh.private_key_path = ["~/.ssh/id_rsa", "/Users/rstrait/.vagrant.d/insecure_private_key"]
  config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/id_rsa"
  config.vm.provision "shell", inline: <<-EOC
    sudo sed -i -e "\\#PasswordAuthentication yes# s#PasswordAuthentication yes#PasswordAuthentication no#g" /etc/ssh/sshd_config
   #sudo service ssh restart
  EOC
  end

  # Cattle server 2.
  config.vm.define "cattle2" do |app|
    app.vm.hostname = "nginx2.test"
    app.vm.network :private_network, ip: "192.168.50.30"
  config.ssh.private_key_path = ["~/.ssh/id_rsa", "/Users/rstrait/.vagrant.d/insecure_private_key"]
  config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/id_rsa"
  config.vm.provision "shell", inline: <<-EOC
    sudo sed -i -e "\\#PasswordAuthentication yes# s#PasswordAuthentication yes#PasswordAuthentication no#g" /etc/ssh/sshd_config
   #sudo service ssh restart
  EOC
  end

  # Cattle server 3.
  config.vm.define "cattle3" do |app|
    app.vm.hostname = "nginx3.test"
    app.vm.network :private_network, ip: "192.168.50.40"
  config.ssh.private_key_path = ["~/.ssh/id_rsa", "/Users/rstrait/.vagrant.d/insecure_private_key"]
  config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/id_rsa"
  config.vm.provision "shell", inline: <<-EOC
    sudo sed -i -e "\\#PasswordAuthentication yes# s#PasswordAuthentication yes#PasswordAuthentication no#g" /etc/ssh/sshd_config
   #sudo service ssh restart
  EOC
  end
end
